package main

import (
	"GOlang/algo"
	"fmt"
	"os"
	"strconv"
)

func main() {
	if len(os.Args) != 4 {
		fmt.Println("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: calculator <—á–∏—Å–ª–æ1> <–æ–ø–µ—Ä–∞—Ü–∏—è> <—á–∏—Å–ª–æ2>")
		fmt.Println("–ü—Ä–∏–º–µ—Ä: ./main.go 10 + 5")
		fmt.Println("–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: +, -, *, /, `, sqrt")
		os.Exit(1)
	}

	// –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
	a, err := strconv.ParseFloat(os.Args[1], 64)
	if err != nil {
		fmt.Printf("–û—à–∏–±–∫–∞: –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ '%s' –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–µ\n", os.Args[1])
		os.Exit(1)
	}

	b, err := strconv.ParseFloat(os.Args[3], 64)
	if err != nil {
		fmt.Printf("–û—à–∏–±–∫–∞: –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ '%s' –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–µ\n", os.Args[3])
		os.Exit(1)
	}

	operation := os.Args[2]

	// –í—ã—á–∏—Å–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
	result, err := algo.Calculator(a, b, operation)
	if err != nil {
		fmt.Printf("–û—à–∏–±–∫–∞: %v\n", err)
		os.Exit(1)
	}

	// –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
	fmt.Printf("üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: %.2f %s %.2f = %.2f\n", a, operation, b, result)

}

//CALCULATOR!!!!
